"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Dict, Optional, Set, Tuple, Union
from pydantic.json import ENCODERS_BY_TYPE

SetIntStr = Set[Union[int, str]]
DictIntStrAny = Dict[Union[int, str], Any]


def generate_encoders_by_class_tuples(type_encoder_map: Dict[Any, Callable]) -> Dict[Callable, Tuple]:
    ...


encoders_by_class_tuples = generate_encoders_by_class_tuples(ENCODERS_BY_TYPE)


def jsonable_encoder(obj: Any, include: Optional[Union[SetIntStr, DictIntStrAny]] = ..., exclude: Optional[Union[SetIntStr, DictIntStrAny]] = ..., by_alias: bool = ..., exclude_unset: bool = ..., exclude_defaults: bool = ..., exclude_none: bool = ..., custom_encoder: dict = ...) -> Any:
    ...
